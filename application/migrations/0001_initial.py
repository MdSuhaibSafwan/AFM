# Generated by Django 4.2.16 on 2024-09-15 15:19

import AFM.validators
import application.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("administration", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(max_length=50, null=True, unique=True)),
                ("consent_as_parent", models.BooleanField(null=True)),
                ("consent_terms_condition", models.BooleanField(null=True)),
                (
                    "program_level",
                    models.PositiveIntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "Foundation"),
                            (1, "Undergraduate"),
                            (2, "Postgraduate"),
                            (3, "Research"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "exclude_institutes_other",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "allow_other_institutes",
                    models.IntegerField(
                        choices=[(0, "NO"), (1, "YES")], default=1, null=True
                    ),
                ),
                (
                    "subject",
                    models.IntegerField(
                        blank=True, choices=[(6, "Medicine")], default=6, null=True
                    ),
                ),
                (
                    "desire_course",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "intake_year",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (2025, 2025),
                            (2026, 2026),
                            (2027, 2027),
                            (2028, 2028),
                            (2029, 2029),
                            (2030, 2030),
                            (2031, 2031),
                            (2032, 2032),
                            (2033, 2033),
                        ],
                        default=2025,
                        null=True,
                    ),
                ),
                (
                    "intake_month",
                    models.PositiveIntegerField(
                        choices=[("", "Select"), (0, "January"), (8, "September")],
                        null=True,
                    ),
                ),
                (
                    "study_destination_country",
                    django_countries.fields.CountryField(
                        countries=application.models.DestinationCountries,
                        default="GB",
                        max_length=35,
                        multiple=True,
                    ),
                ),
                (
                    "fees_affordability",
                    models.CharField(
                        choices=[
                            ("", "Select"),
                            ("0 - £5,000", "0 - £5,000"),
                            ("£5,000 - £10,000", "£5,000 - £10,000"),
                            ("£10,000 - £20,000", "£10,000 - £20,000"),
                            ("£20,000 - £30,000", "£20,000 - £30,000"),
                            ("£30,000 - £50,000", "£30,000 - £50,000"),
                        ],
                        default="£10,000 - £20,000",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "scholarship_option",
                    models.IntegerField(
                        choices=[(0, "NO"), (1, "YES")], default=1, null=True
                    ),
                ),
                ("about_me", models.TextField(blank=True, null=True)),
                (
                    "level_of_english",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "Beginners"),
                            (1, "Elementary"),
                            (2, "Intermediate"),
                            (3, "Advanced"),
                            (4, "Native Speaker"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "learning_disabilities_or_difficulties",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                ("disabilities_text", models.TextField(blank=True, null=True)),
                ("health_conditions", models.CharField(max_length=30, null=True)),
                ("health_conditions_text", models.TextField(blank=True, null=True)),
                (
                    "criminal_records",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                ("records", models.CharField(blank=True, max_length=100, null=True)),
                ("others", models.TextField(blank=True, null=True)),
                (
                    "ethnic_origin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            ("Arab", "Arab"),
                            ("Asian - Indian", "Asian - Indian"),
                            ("Asian - Pakistani", "Asian - Pakistani"),
                            ("Asian - Bangladeshi", "Asian - Bangladeshi"),
                            ("Asian - Chinese", "Asian - Chinese"),
                            ("Asian - Other", "Asian - Other"),
                            ("Black - Caribbean", "Black - Caribbean"),
                            ("Black - African", "Black - African"),
                            ("Black - Other", "Black - Other"),
                            ("Gypsy, Traveller or", "Gypsy, Traveller or"),
                            ("White", "White"),
                            ("White/Black Caribbn", "White/Black Caribbn"),
                            ("White/Black African", "White/Black African"),
                            ("White and Asian", "White and Asian"),
                            ("Other Mixed", "Other Mixed"),
                            ("Other", "Other"),
                            ("Prefer not to say", "Prefer not to say"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "religion_or_belief",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (
                                "Any other religion or belief",
                                "Any other religion or belief",
                            ),
                            ("Buddhist", "Buddhist"),
                            ("Christian", "Christian"),
                            (
                                "Christian - Church of Ireland",
                                "Christian - Church of Ireland",
                            ),
                            (
                                "Christian - Church of Scotland",
                                "Christian - Church of Scotland",
                            ),
                            (
                                "Christian - Methodist Church in Ireland",
                                "Christian - Methodist Church in Ireland",
                            ),
                            (
                                "Christian - Other denomination",
                                "Christian - Other denomination",
                            ),
                            (
                                "Christian - Presbyterian Church in Ireland",
                                "Christian - Presbyterian Church in Ireland",
                            ),
                            (
                                "Christian - Roman Catholic",
                                "Christian - Roman Catholic",
                            ),
                            ("Hindu", "Hindu"),
                            ("Jewish", "Jewish"),
                            ("Muslim", "Muslim"),
                            ("No religion", "No religion"),
                            ("Sikh", "Sikh"),
                            ("Spiritual", "Spiritual"),
                            ("Prefer not to say", "Prefer not to say"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "sexual_orientation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            ("Bisexual", "Bisexual"),
                            ("Gay Man", "Gay Man"),
                            ("Gay Woman", "Gay Woman"),
                            ("Heterosexual", "Heterosexual"),
                            ("Other", "Other"),
                            ("Prefer not to say", "Prefer not to say"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "research_portfolio",
                    models.FileField(
                        null=True,
                        upload_to="research-portfolios/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "portfolio",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="portfolios/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "Approved"),
                            (1, "Rejected"),
                            (2, "Completed"),
                            (3, "Incomplete"),
                        ],
                        null=True,
                    ),
                ),
                ("fill_form_permission", models.BooleanField(default=False, null=True)),
                ("applypool_status", models.BooleanField(default=False, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("submitted_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="application",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="administration.appadmin",
                    ),
                ),
                (
                    "exclude_institutes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exclude_institutes",
                        to="administration.institute",
                    ),
                ),
                (
                    "institute",
                    models.ManyToManyField(
                        related_name="institute", to="administration.institute"
                    ),
                ),
                (
                    "is_lead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="administration.lead",
                    ),
                ),
                (
                    "mentor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="application_mentor",
                        to="administration.mentor",
                    ),
                ),
                (
                    "selected_institutes",
                    models.ManyToManyField(
                        related_name="selected_institutes",
                        to="administration.institute",
                    ),
                ),
            ],
            options={
                "db_table": "application",
            },
        ),
        migrations.CreateModel(
            name="ConsideredApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_type",
                    models.IntegerField(
                        choices=[(0, "Online Application"), (1, "Email Application")],
                        null=True,
                    ),
                ),
                ("course_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "institute_url",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                ("email", models.EmailField(max_length=50, null=True)),
                ("reference_id", models.CharField(max_length=50, null=True)),
                ("password", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "application_doc",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="email-applications/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                ("date", models.DateField(null=True)),
                ("notes", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "app_status_by_institute",
                    models.IntegerField(
                        choices=[
                            (1, "make a formal application"),
                            (2, "request documents"),
                            (3, "interview"),
                        ],
                        null=True,
                    ),
                ),
                ("feedback_comment", models.TextField(null=True)),
                ("feedback_comment_admin", models.TextField(null=True)),
                ("response_date", models.DateField(null=True)),
                ("offer_select", models.BooleanField(default=False, null=True)),
                ("offer_select_date", models.DateTimeField(null=True)),
                (
                    "offer_reject_reason",
                    models.CharField(
                        choices=[
                            ("", "Select"),
                            (
                                "Enrolled with other Institute",
                                "Enrolled with other Institute",
                            ),
                            ("Not interested", "Not interested"),
                            (
                                "Change of study destination country",
                                "Change of study destination country",
                            ),
                            ("Other", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "offer_status",
                    models.IntegerField(
                        choices=[
                            (0, "In Process"),
                            (1, "Conditional"),
                            (2, "Unconditional"),
                            (3, "Unsuccessful"),
                        ],
                        null=True,
                    ),
                ),
                ("final_selection", models.BooleanField(default=False, null=True)),
                ("is_direct_app", models.BooleanField(default=False, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="administration.institute",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisaHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "study_destination_country",
                    django_countries.fields.CountryField(default="GB", max_length=2),
                ),
                (
                    "have_you_studied_in_the_uk_before",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                (
                    "visa_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            ("Student Visa", "Student Visa"),
                            ("Visit Visa", "Visit Visa"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("reason", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "visa_duration_from_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                            (2025, 2025),
                            (2026, 2026),
                        ],
                        null=True,
                    ),
                ),
                (
                    "visa_duration_from_month",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "visa_duration_to_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                            (2025, 2025),
                            (2026, 2026),
                        ],
                        null=True,
                    ),
                ),
                (
                    "visa_duration_to_month",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "have_you_ever_been_refuse_entry_in_to_the_uk",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                (
                    "have_you_ever_been_deported_from_the_uk",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visa_history_app",
                        to="application.application",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("referee_name", models.CharField(max_length=50, null=True)),
                ("position", models.CharField(max_length=50, null=True)),
                ("company_or_school", models.CharField(max_length=50, null=True)),
                (
                    "country",
                    django_countries.fields.CountryField(max_length=2, null=True),
                ),
                ("email", models.EmailField(max_length=50, null=True)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "capacity_knew_under",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "duration_from_year",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_from_month",
                    models.PositiveIntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_to_year",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_to_month",
                    models.PositiveIntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "reference_upload",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="references/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="references_app",
                        to="application.application",
                    ),
                ),
            ],
            options={
                "db_table": "references_app",
            },
        ),
        migrations.CreateModel(
            name="ProfessionalTrainingCertificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "certificate_name",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                (
                    "company_institute",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                ("certificate_date", models.DateField(blank=True, null=True)),
                (
                    "certificate_url",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="professional-training-certificates/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professional_training_certificates_app",
                        to="application.application",
                    ),
                ),
            ],
            options={
                "db_table": "professional_training_certificates_app",
            },
        ),
        migrations.CreateModel(
            name="ProfessionalExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_employer_name",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                ("position", models.CharField(blank=True, max_length=110, null=True)),
                (
                    "duration_from_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_from_month",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_to_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                        ],
                        null=True,
                    ),
                ),
                (
                    "duration_to_month",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "company_email",
                    models.EmailField(blank=True, max_length=50, null=True),
                ),
                (
                    "company_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "company_address",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                (
                    "company_website",
                    models.URLField(blank=True, max_length=300, null=True),
                ),
                ("brief_description", models.TextField(blank=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professional_experience_app",
                        to="application.application",
                    ),
                ),
            ],
            options={
                "db_table": "professional_experience_app",
            },
        ),
        migrations.CreateModel(
            name="PersonalStatement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_1", models.TextField(null=True)),
                ("question_2", models.TextField(null=True)),
                ("question_3", models.TextField(null=True)),
                ("other_information", models.TextField(blank=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personal_statement_app",
                        to="application.application",
                    ),
                ),
                (
                    "considered_application",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.consideredapplication",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="administration.institute",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OmittedApp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="administration.institute",
                    ),
                ),
            ],
            options={
                "db_table": "Omitted_applications",
            },
        ),
        migrations.CreateModel(
            name="FinalSelected",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payment_date", models.DateField(null=True)),
                ("payment_reference", models.CharField(max_length=100, null=True)),
                ("amount_paid", models.PositiveIntegerField(null=True)),
                (
                    "proof_of_payment",
                    models.FileField(
                        null=True,
                        upload_to="proof-of-payments/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                ("approve_status", models.BooleanField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "offer",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.consideredapplication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EnglishLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "have_valid_certificate",
                    models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True),
                ),
                (
                    "have_test_booking_date",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "NO"), (1, "YES")],
                        default=0,
                        null=True,
                    ),
                ),
                (
                    "certificate_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("certificate_date", models.DateField(blank=True, null=True)),
                ("listening", models.CharField(blank=True, max_length=3, null=True)),
                ("reading", models.CharField(blank=True, max_length=3, null=True)),
                ("writing", models.CharField(blank=True, max_length=3, null=True)),
                ("speaking", models.CharField(blank=True, max_length=3, null=True)),
                ("overall", models.CharField(blank=True, max_length=3, null=True)),
                ("score", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "certificate",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="english-language-certificates/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "app",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="english_language",
                        to="application.application",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            ("", "Select Document Type"),
                            (5, "Qualification"),
                            (6, "English Language"),
                            (7, "Training"),
                            (8, "Personal Statement"),
                            (9, "Resume/CV"),
                            (10, "Portfolio"),
                            (11, "Research Proposal"),
                            (12, "Passport/Visa Document"),
                            (1, "Conditional Offer"),
                            (2, "Unconditional Offer"),
                            (4, "Application Unsuccessful"),
                            (13, "Invoice"),
                            (14, "Proof of Payment"),
                            (3, "CAS Letter"),
                            ("", "Other"),
                        ],
                        null=True,
                    ),
                ),
                ("doc_type", models.CharField(blank=True, max_length=255, null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                (
                    "upload",
                    models.FileField(
                        null=True,
                        upload_to="application-document-uploads/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DirectApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("course_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="direct_application",
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="direct_app_institute",
                        to="administration.institute",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArchiveApp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="administration.institute",
                    ),
                ),
            ],
            options={
                "db_table": "Archive_applications",
            },
        ),
        migrations.CreateModel(
            name="ApplicationOfferStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_status_by_institute",
                    models.IntegerField(
                        choices=[
                            (1, "make a formal application"),
                            (2, "request documents"),
                            (3, "interview"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "student_response_to_application",
                    models.CharField(max_length=110, null=True),
                ),
                ("feedback_comment", models.TextField(null=True)),
                ("offer_select", models.BooleanField(default=False, null=True)),
                (
                    "offer_status",
                    models.IntegerField(
                        choices=[
                            (0, "In Process"),
                            (1, "Conditional"),
                            (2, "Unconditional"),
                            (3, "Unsuccessful"),
                        ],
                        default=1,
                        null=True,
                    ),
                ),
                ("final_selection", models.BooleanField(default=False, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="application_offer_status",
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="application_offer_status_institute",
                        to="administration.institute",
                    ),
                ),
            ],
            options={
                "db_table": "application_offer_status",
            },
        ),
        migrations.CreateModel(
            name="ApplicationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (0, "Approved"),
                            (1, "Rejected"),
                            (2, "Submitted"),
                            (3, "Incomplete"),
                            (4, "Omitted"),
                            (5, "Reconsidered"),
                            (6, "Considered By Institute"),
                            (7, "App Applied At Institute"),
                            (8, "Offer Status Change"),
                            (9, "Student Response"),
                            (10, "Final Selection"),
                            (11, "Document Upload"),
                            (12, "Document Deleted"),
                        ],
                        null=True,
                    ),
                ),
                ("message", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="application.application",
                    ),
                ),
                (
                    "considered_app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="application.consideredapplication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApplicationFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("q1", models.CharField(max_length=10, null=True)),
                ("q2", models.CharField(max_length=10, null=True)),
                ("q3", models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True)),
                ("q4", models.IntegerField(choices=[(0, "NO"), (1, "YES")], null=True)),
                (
                    "app",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
            ],
            options={
                "db_table": "application_feedback",
            },
        ),
        migrations.CreateModel(
            name="ApplicationComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comment_type",
                    models.IntegerField(
                        choices=[(0, "Open"), (1, "App Admins Only")],
                        default=0,
                        null=True,
                    ),
                ),
                ("comment", models.TextField(null=True)),
                (
                    "comment_status",
                    models.BooleanField(
                        choices=[(True, "published"), (False, "draft")],
                        default=True,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application.application",
                    ),
                ),
                (
                    "app_admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="application.applicationcomment",
                    ),
                ),
            ],
            options={
                "db_table": "application_comments",
            },
        ),
        migrations.CreateModel(
            name="ApplicationAppliedAtUniversityLogin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_type",
                    models.IntegerField(
                        choices=[(0, "Online Application"), (1, "Email Application")],
                        default=0,
                        null=True,
                    ),
                ),
                ("course_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "institute_url",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=50, null=True)),
                (
                    "reference_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("password", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "application_doc",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="email-applications/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                ("date", models.DateField(null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "In Process"),
                            (1, "Conditional"),
                            (2, "Unconditional"),
                            (3, "Unsuccessful"),
                        ],
                        default=0,
                        null=True,
                    ),
                ),
                (
                    "admin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="application_applied_at_university_logins",
                        to="application.application",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="administration.institute",
                    ),
                ),
            ],
            options={
                "db_table": "application applied at university logins",
            },
        ),
        migrations.CreateModel(
            name="AcademicQualification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("institute_name", models.CharField(max_length=110, null=True)),
                (
                    "is_currently_studying",
                    models.IntegerField(
                        choices=[(0, "NO"), (1, "YES")], default=0, null=True
                    ),
                ),
                (
                    "qualification_achieved",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                ("grades_achieved", models.CharField(max_length=2, null=True)),
                (
                    "course_duration_from_year",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                        ],
                        null=True,
                    ),
                ),
                (
                    "course_duration_from_month",
                    models.PositiveIntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "course_duration_to_year",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                            (2025, 2025),
                        ],
                        null=True,
                    ),
                ),
                (
                    "course_duration_to_month",
                    models.PositiveIntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "January"),
                            (1, "February"),
                            (2, "March"),
                            (3, "April"),
                            (4, "May"),
                            (5, "June"),
                            (6, "July"),
                            (7, "August"),
                            (8, "September"),
                            (9, "October"),
                            (10, "November"),
                            (11, "December"),
                        ],
                        null=True,
                    ),
                ),
                ("year_awarded", models.SmallIntegerField(null=True)),
                (
                    "programme_level",
                    models.IntegerField(
                        choices=[
                            ("", "Select"),
                            (0, "Foundation"),
                            (1, "Undergraduate"),
                            (2, "Postgraduate"),
                            (3, "Research"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "institute_email",
                    models.EmailField(blank=True, max_length=50, null=True),
                ),
                ("institute_website", models.URLField(blank=True, null=True)),
                (
                    "institute_address",
                    models.CharField(blank=True, max_length=110, null=True),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(max_length=2, null=True),
                ),
                (
                    "certificate_doc_url",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="academic-qualification-certificates/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "transcripts_doc_url",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="transcripts/",
                        validators=[AFM.validators.validate_file_size],
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="academic_qualifications",
                        to="application.application",
                    ),
                ),
            ],
            options={
                "db_table": "academic_qualifications",
            },
        ),
    ]
