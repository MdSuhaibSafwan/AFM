# Generated by Django 3.1.4 on 2022-07-01 10:07

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppBasicInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.IntegerField(null=True, unique=True)),
                ('user_slug', models.CharField(max_length=20, null=True)),
                ('title', models.CharField(choices=[('', 'Select'), ('mr', 'Mr'), ('miss', 'Miss'), ('ms', 'Ms'), ('mrs', 'Mrs'), ('dr', 'Dr'), ('prof', 'Prof')], max_length=5, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('surname', models.CharField(max_length=50, null=True)),
                ('fullname', models.CharField(max_length=110, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('nationality', django_countries.fields.CountryField(default='IN', max_length=2, null=True)),
                ('gender', models.IntegerField(choices=[('', 'Select'), (0, 'Male'), (1, 'Female'), (2, 'Prefer not to say')], null=True)),
                ('marital_status', models.CharField(choices=[('', 'Select Marital Status'), ('0', 'Single'), ('1', 'Married')], max_length=10, null=True)),
                ('next_of_kin_name', models.CharField(max_length=50, null=True)),
                ('relationship_to_student', models.CharField(max_length=50, null=True)),
                ('next_of_kin_email', models.EmailField(max_length=254, null=True)),
                ('next_of_kin_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
            ],
            options={
                'db_table': 'basic_information',
            },
        ),
        migrations.CreateModel(
            name='CustomUserPersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_slug', models.CharField(max_length=50, null=True, unique=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('name_slug', models.SlugField(max_length=255, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gender', models.IntegerField(choices=[('', 'Select'), (0, 'Male'), (1, 'Female'), (2, 'Prefer not to say')], null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('country_slug', models.SlugField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('currently_living_in', django_countries.fields.CountryField(max_length=2, null=True)),
                ('currently_living_in_slug', models.SlugField(max_length=255, null=True)),
                ('profile_pic', models.FileField(blank=True, default='user_profile/default_profile.png', null=True, upload_to='user_profile/')),
                ('about_me', models.CharField(blank=True, max_length=805, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'custom_user_pi',
                'verbose_name_plural': 'custom_users_pi',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='FoundationProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foundation_provider', models.CharField(max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpokenLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectFoundation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_foundation', models.CharField(max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TutoringInLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutoring_in_level', models.CharField(max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TutoringSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutoring_subject', models.CharField(max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TutoringWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutoring_with', models.CharField(max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_consent', models.BooleanField(default=False)),
                ('currently_studying', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0, null=True)),
                ('study_destination', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('area_of_study', models.PositiveIntegerField(choices=[(6, 'Medicine')], null=True)),
                ('programme_level', models.IntegerField(choices=[('', 'Select'), (0, 'Foundation'), (1, 'Undergraduate'), (2, 'Postgraduate'), (3, 'Research')], null=True)),
                ('level_of_english', models.IntegerField(choices=[('', 'Select'), (0, 'Beginners'), (1, 'Elementary'), (2, 'Intermediate'), (3, 'Advanced'), (4, 'Native Speaker')], null=True)),
                ('what_are_you_studying', models.CharField(blank=True, max_length=100, null=True)),
                ('intake_year', models.IntegerField(choices=[('', 'Select'), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027)], default=2020, null=True)),
                ('last_qualification', models.CharField(blank=True, max_length=100, null=True)),
                ('about_me', models.CharField(blank=True, max_length=500, null=True)),
                ('consent1', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='personal_information.customuserpersonalinformation')),
            ],
            options={
                'db_table': 'student_pi',
            },
        ),
        migrations.CreateModel(
            name='MentorPersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studying_in', django_countries.fields.CountryField(default='IN', max_length=2, null=True)),
                ('studying_in_slug', models.SlugField(max_length=255, null=True)),
                ('currently_studying', models.IntegerField(choices=[(6, 'Medicine')], null=True)),
                ('currently_studying_slug', models.SlugField(max_length=255, null=True)),
                ('passport', models.FileField(null=True, upload_to='mentor_passports/')),
                ('phone', models.CharField(max_length=20, null=True)),
                ('are_you_graduated', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0, null=True)),
                ('study_year', models.IntegerField(blank=True, choices=[('', 'Select'), (1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year'), (5, 'Fifth Year'), (6, 'Sixth Year')], null=True)),
                ('subject', models.IntegerField(choices=[(6, 'Medicine')], null=True)),
                ('name_of_school', models.CharField(max_length=50, null=True)),
                ('did_you_study_the_foundation_course_in_uk', models.IntegerField(blank=True, choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('where_did_you_study', models.CharField(blank=True, max_length=50, null=True)),
                ('foundation_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('programme_level', models.IntegerField(choices=[('', 'Select'), (0, 'Foundation'), (1, 'Undergraduate'), (2, 'Postgraduate'), (3, 'Research')], null=True)),
                ('year_graduated', models.IntegerField(blank=True, choices=[('', 'Select'), (2020, 2020), (2021, 2021), (2022, 2022)], default=2022, null=True)),
                ('student_id', models.FileField(blank=True, null=True, upload_to='user_profile/')),
                ('unibuddy', models.CharField(blank=True, max_length=50, null=True)),
                ('previous_qualification', models.TextField(null=True)),
                ('are_you_registered_as_an_ambassador', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('are_you_currently_a_tutor', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('do_you_tutor_privately_or_online', models.IntegerField(blank=True, choices=[(0, 'Privately'), (1, 'Online Platform')], null=True)),
                ('hours_you_tutored', models.IntegerField(blank=True, null=True)),
                ('hours_you_commit_to_tutor', models.IntegerField(blank=True, null=True)),
                ('tutoring_subject', models.CharField(blank=True, max_length=800, null=True)),
                ('tutoring_with', models.CharField(blank=True, max_length=800, null=True)),
                ('tutoring_subject_other', models.CharField(blank=True, max_length=255, null=True)),
                ('tutor_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('tutoring_in_level', models.CharField(blank=True, max_length=100, null=True)),
                ('online_platform', models.CharField(blank=True, max_length=100, null=True)),
                ('write_something_about_you', models.CharField(blank=True, max_length=200, null=True)),
                ('linkedin_profile_url', models.URLField(blank=True, max_length=100, null=True)),
                ('societies', models.CharField(blank=True, max_length=100, null=True)),
                ('my_skills', models.CharField(blank=True, max_length=100, null=True)),
                ('hobbies_and_interest', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_in_content_creation', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('about_content_creation', models.TextField(blank=True, null=True)),
                ('profile_made_visible_to_employers', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('about_yourself', models.TextField(blank=True, null=True)),
                ('dbs_check', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('dbs_certificate_type', models.IntegerField(blank=True, choices=[('', 'Select'), (1, 'Type 1'), (2, 'Type 2')], null=True)),
                ('dbs_Reference_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('dbs_date', models.DateField(blank=True, null=True)),
                ('dbs_certificate', models.FileField(blank=True, null=True, upload_to='documents/dbs_certificate')),
                ('dbs_certificate_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('dbs_declaration', models.TextField(blank=True, null=True, verbose_name='Please state anything you wish to declare regarding your DBS')),
                ('consent1', models.BooleanField(null=True)),
                ('consent2', models.BooleanField(null=True)),
                ('consent3', models.BooleanField(null=True)),
                ('consent4', models.BooleanField(null=True)),
                ('late_point', models.URLField(blank=True, max_length=100, null=True)),
                ('are_you_a_uk_national', models.BooleanField(default=False, verbose_name='Are you a UK national')),
                ('tier_4_visa_allow_you_to_work_in_uk', models.BooleanField(default=False, verbose_name='Does your Tier 4 Student Visa allow you to be employed in the UK?')),
                ('visa_start_date', models.DateField(blank=True, null=True)),
                ('visa_end_date', models.DateField(blank=True, null=True)),
                ('visa_card', models.FileField(blank=True, null=True, upload_to='documents/visa_card')),
                ('eligible_to_work_in_country_living_in', models.BooleanField(default=False)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='personal_information.customuserpersonalinformation')),
                ('languages_i_can_teach', models.ManyToManyField(blank=True, to='personal_information.SpokenLanguage')),
                ('subject_foundation', models.ManyToManyField(blank=True, to='personal_information.SubjectFoundation')),
                ('tutoring_in_level_list', models.ManyToManyField(blank=True, to='personal_information.TutoringInLevel')),
                ('tutoring_subject_list', models.ManyToManyField(blank=True, to='personal_information.TutoringSubject')),
                ('tutoring_with_list', models.ManyToManyField(blank=True, to='personal_information.TutoringWith')),
            ],
            options={
                'db_table': 'mentor_pi',
            },
        ),
        migrations.AddField(
            model_name='customuserpersonalinformation',
            name='spoken_languages',
            field=models.ManyToManyField(to='personal_information.SpokenLanguage'),
        ),
        migrations.CreateModel(
            name='AppPassportInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(max_length=10, null=True, unique=True)),
                ('issue_date', models.DateField(null=True)),
                ('expiry_date', models.DateField(null=True)),
                ('issuing_authority', models.CharField(max_length=50, null=True)),
                ('issuing_country', django_countries.fields.CountryField(default='IN', max_length=2, null=True)),
                ('place_of_birth', models.CharField(max_length=50, null=True)),
                ('passport', models.FileField(null=True, upload_to='documents/')),
                ('app', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_passport_information', to='personal_information.appbasicinformation')),
            ],
            options={
                'db_table': 'app_passport_information',
            },
        ),
        migrations.AddField(
            model_name='appbasicinformation',
            name='native_languages',
            field=models.ManyToManyField(to='personal_information.SpokenLanguage'),
        ),
        migrations.CreateModel(
            name='AppAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(max_length=50, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('country', django_countries.fields.CountryField(default='IN', max_length=2, null=True)),
                ('app', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_address', to='personal_information.appbasicinformation')),
            ],
            options={
                'db_table': 'app_address',
            },
        ),
    ]
