# Generated by Django 3.1.4 on 2022-07-01 07:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', models.CharField(max_length=50, null=True, unique=True)),
                ('user_type', models.PositiveIntegerField(choices=[('', 'select-user'), (0, 'Super admin'), (1, 'Admin'), (2, 'Institute'), (3, 'Student'), (4, 'Mentor'), (5, 'Parent'), (6, 'Institute admin'), (7, 'App admin'), (8, 'Recruiter'), (9, 'System Mentor'), (10, 'System Recruiter')], null=True)),
                ('profile_pic', models.FileField(blank=True, upload_to='user_profile/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'custom_user',
                'verbose_name_plural': 'custom_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DemandAndSupply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spoken_language', models.CharField(max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('subject', models.PositiveIntegerField(choices=[('', 'Select'), (1, 'Business Studies'), (2, 'Social Studies'), (3, 'Arts & Design'), (4, 'Law'), (5, 'Biomedical Sciences'), (6, 'Medicine'), (7, 'Dentistry'), (8, 'pharmacy'), (9, 'Computer Science'), (10, 'Finance'), (11, 'Architecture'), (12, 'Finance & Accounting'), (13, 'Nursing'), (14, 'Politics'), (15, 'Chemical Engineering'), (16, 'Electrical Engineering'), (17, 'International Relations'), (18, 'Mechanical Engineering'), (19, 'Economics')], null=True)),
                ('demand', models.CharField(max_length=100, null=True)),
                ('supply', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=100, null=True)),
                ('institute_logo', models.ImageField(blank=True, null=True, upload_to='institute_logo/')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('institute_slug', models.SlugField(max_length=255, null=True, unique=True)),
                ('account_type', models.BooleanField(default=False)),
                ('funding_last_year', models.CharField(blank=True, max_length=50, null=True)),
                ('funding_current_year', models.CharField(blank=True, max_length=50, null=True)),
                ('countries_available', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('extra_notes', models.TextField(blank=True, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'institute',
            },
        ),
        migrations.CreateModel(
            name='InstituteLead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('are_you', models.IntegerField(choices=[('', 'Select'), (1, 'Institute'), (2, 'University')], null=True)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('message', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteScholarshipProgramme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.IntegerField(blank=True, choices=[(6, 'Medicine')], null=True)),
                ('programme_level', models.IntegerField(blank=True, choices=[(0, 'Foundation'), (1, 'Undergraduate'), (2, 'Postgraduate'), (3, 'Research')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(blank=True, max_length=30, null=True)),
                ('institute_name_slug', models.SlugField(max_length=255, null=True)),
                ('institute_logo', models.FileField(blank=True, null=True, upload_to='institute_logo/')),
                ('book_appointment_link', models.URLField(null=True)),
                ('profile_status', models.BooleanField(default=False, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.institute')),
            ],
            options={
                'db_table': 'mentor',
            },
        ),
        migrations.CreateModel(
            name='TechSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=110, null=True)),
                ('message', models.TextField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tech_support',
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100, null=True)),
                ('subscribe_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber', to='administration.mentor')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ManyToManyField(to='administration.Mentor')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('', 'Select'), ('Male', 'Male'), ('Female', 'Female'), ('Prefer not to say', 'Prefer not to say')], max_length=20, null=True)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='user_profile/')),
                ('date_of_birth', models.DateField(null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('status', models.IntegerField(choices=[(0, 'approved'), (1, 'rejected'), (2, 'hold')], null=True)),
                ('work_type', models.CharField(choices=[('', '-- Select Work Type --'), (1, 'Company'), (2, 'Individual'), (3, 'School')], max_length=5, null=True)),
                ('company_name', models.CharField(blank=True, max_length=110, null=True)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('countries_recruit_from', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('countries_recruit_to', django_countries.fields.CountryField(blank=True, max_length=746, multiple=True)),
                ('passport', models.FileField(blank=True, null=True, upload_to='recruiters/passports/')),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to='recruiters/registration_certificate/')),
                ('bank_name', models.CharField(blank=True, max_length=110, null=True)),
                ('account_name', models.CharField(blank=True, max_length=110, null=True)),
                ('sort_code', models.CharField(blank=True, max_length=15, null=True)),
                ('account_number', models.CharField(blank=True, max_length=40, null=True)),
                ('iban', models.CharField(blank=True, max_length=40, null=True)),
                ('swit', models.CharField(blank=True, max_length=15, null=True)),
                ('ifsc', models.CharField(blank=True, max_length=15, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=110, null=True)),
                ('address', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'recruiter',
                'verbose_name_plural': 'recruiters',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=400, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ManyToManyField(to='administration.Mentor')),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='MentorPublicProfileComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True)),
                ('comment_status', models.BooleanField(choices=[(True, 'published'), (False, 'draft')], default=True, null=True)),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='administration.mentorpublicprofilecomment')),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mentor_public_profile_comments',
            },
        ),
        migrations.CreateModel(
            name='MentorFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=50, null=True)),
                ('q1', models.CharField(max_length=10, null=True)),
                ('q2', models.CharField(max_length=10, null=True)),
                ('q3', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('q4', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('status', models.BooleanField(default=False, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.mentor')),
            ],
            options={
                'db_table': 'mentor_feedback',
            },
        ),
        migrations.CreateModel(
            name='MentorBookingLeads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_for_appointment', models.DateField(null=True)),
                ('time_for_appointment', models.TimeField(null=True)),
                ('first_name', models.CharField(max_length=110, null=True)),
                ('last_name', models.CharField(max_length=110, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('i_am', models.CharField(choices=[('', 'Select'), ('the Applicant', 'the Applicant'), ('a Parent', 'a Parent'), ('a School', 'a School'), ('an Agent', 'an Agent')], max_length=100, null=True)),
                ('age_of_applicant', models.CharField(choices=[('', 'Select'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23+', '23+'), ("I'm a Parent/Guardian", "I'm a Parent/Guardian")], max_length=40, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('reasone_for_an_appointment', models.CharField(choices=[('', 'Select'), ('Choosing a University', 'Choosing a University'), ('University Application', 'University Application'), ('Study Experience', 'Study Experience'), ('Tutoring', 'Tutoring'), ('Exam Preparation', 'Exam Preparation'), ('Employment Prospects', 'Employment Prospects'), ('Other', 'Other')], max_length=100, null=True)),
                ('message', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.mentor')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=50, null=True, unique=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('subject_interest', models.IntegerField(choices=[(6, 'Medicine')], null=True)),
                ('interested_in_academic_counselling', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('intake_year', models.IntegerField(choices=[('', 'Select')], default=2022, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('where_did_you_hear_about_us', models.CharField(max_length=50, null=True)),
                ('message', models.CharField(max_length=200, null=True)),
                ('take_lead', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.recruiter')),
            ],
            options={
                'db_table': 'Lead',
            },
        ),
        migrations.CreateModel(
            name='InstituteRecruiterWorkWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(blank=True, max_length=50, null=True)),
                ('country_name', django_countries.fields.CountryField(max_length=2, null=True)),
                ('agreement_start_year', models.IntegerField(choices=[('', 'Select'), (2022, 2022), (2023, 2023)], default=2022, null=True)),
                ('agreement_start_month', models.PositiveIntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], null=True)),
                ('agreement_end_year', models.IntegerField(choices=[('', 'Select'), (2022, 2022), (2023, 2023)], default=2022, null=True)),
                ('agreement_end_month', models.PositiveIntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], null=True)),
                ('agreement_doc', models.FileField(blank=True, null=True, upload_to='')),
                ('students_last_year', models.PositiveIntegerField(blank=True, null=True)),
                ('students_this_year', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('please_select_role', models.CharField(choices=[('Institution Staff', 'Institution Staff'), ('Ambassador', 'Ambassador'), ('Mentor', 'Mentor')], max_length=20, null=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.institute')),
            ],
            options={
                'db_table': 'institute_admin',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('i_am_a', models.IntegerField(choices=[(1, 'Student'), (2, 'Parent'), (3, 'Mentor'), (4, 'University'), (5, 'College')], null=True)),
                ('connect_with_a_mentor', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('name', models.CharField(max_length=110, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('phone_no', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('subject', models.CharField(max_length=110, null=True)),
                ('message', models.TextField(null=True)),
                ('question1', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contact_us',
            },
        ),
        migrations.CreateModel(
            name='BlockUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(null=True)),
                ('screenshot', models.FileField(blank=True, null=True, upload_to='')),
                ('is_removed', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('report_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported_by', to=settings.AUTH_USER_MODEL)),
                ('reported_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported_user', to=settings.AUTH_USER_MODEL)),
                ('user_assigned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_assigned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'app admin',
            },
        ),
        migrations.CreateModel(
            name='AfmLinkUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_slug', models.CharField(max_length=50, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.institute')),
            ],
            options={
                'db_table': 'afm_links_users',
            },
        ),
    ]
